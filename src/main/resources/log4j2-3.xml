<?xml version="1.0" encoding="UTF-8"?>
<Configuration status="INFO">
    <Appenders>
        <!-- Console Appender -->
        <Console name="ConsoleAppender" target="SYSTEM_OUT">
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"/>
        </Console>

        <!-- Rolling File Appender for structured JSON logs -->
        <RollingFile name="FileAppender" fileName="logs/verify-otp-api.log"
                     filePattern="logs/verify-otp-api-%d{yyyy-MM-dd}-%i.log.gz">
            <JsonLayout complete="false" compact="true" eventEol="true">
                <KeyValuePair key="timestamp" value="$${date:yyyy-MM-dd'T'HH:mm:ss.SSS'Z'}"/>
            </JsonLayout>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="10 MB"/>
            </Policies>
            <DefaultRolloverStrategy max="10"/>
        </RollingFile>

        <!--
        Example Appender for Kafka. Requires kafka-log4j2-appender dependency.
        This is an abstracted layer; real implementation would require broker details.
        <Kafka name="KafkaAppender" topic="app-logs">
            <PatternLayout pattern="%msg" />
            <Property name="bootstrap.servers">kafka-broker1:9092,kafka-broker2:9092</Property>
        </Kafka>
        -->
    </Appenders>

    <Loggers>
        <Root level="info">
            <AppenderRef ref="ConsoleAppender"/>
            <AppenderRef ref="FileAppender"/>
            <!-- <AppenderRef ref="KafkaAppender"/> -->
        </Root>

        <Logger name="com.verifyotpapi" level="debug" additivity="false">
            <AppenderRef ref="ConsoleAppender"/>
            <AppenderRef ref="FileAppender"/>
            <!-- <AppenderRef ref="KafkaAppender"/> -->
        </Logger>
    </Loggers>
</Configuration>
```
```properties
# src/main/resources/application.properties
# Server Configuration
server.port=8080
spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER

# Database Configuration (H2 in-memory)
spring.datasource.url=jdbc:h2:mem:otpdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# Custom Application Properties
api.otp.max-attempts=3
api.otp.duration-minutes=5

# JWT Configuration
api.jwt.secret=bXktc2VjcmV0LWtleS1mb3ItamFzb24td2ViLXRva2VuLXByb2R1Y3Rpb24tZ3JhZGU=
api.jwt.access-token-expiration-seconds=3600 # 1 hour
api.jwt.refresh-token-expiration-days=30 # 30 days

```
```java
// src/main/java/com/verifyotpapi/VerifyOtpApiApplication_VOTP1.java